--// 💎 Auto TP Panel (Pyramid + Gem)
--// by Vincenzo

--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Player = Players.LocalPlayer

--// Variables
local Running = true
local Minimized = false
local AutoTPPyramid = false
local AutoTPGem = false

local PyramidPos = Vector3.new(-1046.108154296875, 17.30853271484375, -496.2271728515625)
local GemPos = Vector3.new(-86.12039947509766, 25.12676239013672, 800.6677856445312)

local function isNear(pos1, pos2, threshold)
	return (pos1 - pos2).Magnitude <= threshold
end

--// UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "VincenzoTPPanel"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 400, 0, 260)
Frame.Position = UDim2.new(0.5, -200, 0.7, 0)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 12)

--// Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TitleBar.Parent = Frame
Instance.new("UICorner", TitleBar).CornerRadius = UDim.new(0, 12)

local TitleText = Instance.new("TextLabel")
TitleText.Size = UDim2.new(1, -120, 1, 0)
TitleText.Position = UDim2.new(0, 10, 0, 0)
TitleText.BackgroundTransparency = 1
TitleText.Text = "Auto TP Panel 💎"
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.Font = Enum.Font.GothamBold
TitleText.TextScaled = true
TitleText.Parent = TitleBar

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 40, 1, 0)
MinimizeButton.Position = UDim2.new(1, -80, 0, 0)
MinimizeButton.BackgroundTransparency = 1
MinimizeButton.Text = "➖"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 150)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextScaled = true
MinimizeButton.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 40, 1, 0)
CloseButton.Position = UDim2.new(1, -40, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Text = "❌"
CloseButton.TextColor3 = Color3.fromRGB(255, 100, 100)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextScaled = true
CloseButton.Parent = TitleBar

--// TP Buttons
local function createButton(text, posY)
	local Button = Instance.new("TextButton")
	Button.Size = UDim2.new(0.8, 0, 0, 50)
	Button.Position = UDim2.new(0.1, 0, posY, 0)
	Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Button.Text = text .. ": OFF"
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.Font = Enum.Font.GothamBold
	Button.TextScaled = true
	Button.Parent = Frame
	Instance.new("UICorner", Button).CornerRadius = UDim.new(0, 10)
	return Button
end

local PyramidButton = createButton("Auto TP Pyramid", 0.25)
local GemButton = createButton("Auto TP Gem", 0.55)

--// Status Label
local Status = Instance.new("TextLabel")
Status.Size = UDim2.new(1, 0, 0, 40)
Status.Position = UDim2.new(0, 0, 0.85, 0)
Status.BackgroundTransparency = 1
Status.Text = "Status: ❌ OFF"
Status.TextColor3 = Color3.fromRGB(255, 80, 80)
Status.Font = Enum.Font.GothamBold
Status.TextScaled = true
Status.Parent = Frame

--// Button Functions
local function startAutoTP(targetPos, name)
	local char = Player.Character
	if not char or not char:FindFirstChild("HumanoidRootPart") then return end
	local root = char.HumanoidRootPart
	if not isNear(root.Position, targetPos, 5) then
		root.CFrame = CFrame.new(targetPos)
		Status.Text = "Status: ✅ Arrived at " .. name
		Status.TextColor3 = Color3.fromRGB(100, 255, 100)
	else
		Status.Text = "Status: 🌀 Already at " .. name
		Status.TextColor3 = Color3.fromRGB(255, 255, 150)
	end
end

PyramidButton.MouseButton1Click:Connect(function()
	AutoTPPyramid = not AutoTPPyramid
	if AutoTPPyramid then
		PyramidButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
		PyramidButton.Text = "Auto TP Pyramid: ON"
		Status.Text = "Status: 🌀 Teleporting to Pyramid..."
		startAutoTP(PyramidPos, "Pyramid Gate")
		task.wait(1)
		AutoTPPyramid = false
		PyramidButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		PyramidButton.Text = "Auto TP Pyramid: OFF"
	else
		PyramidButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		PyramidButton.Text = "Auto TP Pyramid: OFF"
	end
end)

GemButton.MouseButton1Click:Connect(function()
	AutoTPGem = not AutoTPGem
	if AutoTPGem then
		GemButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
		GemButton.Text = "Auto TP Gem: ON"
		Status.Text = "Status: 🌀 Teleporting to Gem..."
		startAutoTP(GemPos, "Gem Area")
		task.wait(1)
		AutoTPGem = false
		GemButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		GemButton.Text = "Auto TP Gem: OFF"
	else
		GemButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		GemButton.Text = "Auto TP Gem: OFF"
	end
end)

--// Frame Controls
CloseButton.MouseButton1Click:Connect(function()
	Running = false
	ScreenGui:Destroy()
end)

MinimizeButton.MouseButton1Click:Connect(function()
	Minimized = not Minimized
	if Minimized then
		PyramidButton.Visible = false
		GemButton.Visible = false
		Status.Visible = false
		Frame:TweenSize(UDim2.new(0, 400, 0, 40), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
		MinimizeButton.Text = "➕"
	else
		Frame:TweenSize(UDim2.new(0, 400, 0, 260), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
		task.wait(0.3)
		PyramidButton.Visible = true
		GemButton.Visible = true
		Status.Visible = true
		MinimizeButton.Text = "➖"
	end
end)

--// Draggable Frame
local dragging, dragStart, startPos
local function update(input)
	local delta = input.Position - dragStart
	Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = Frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		update(input)
	end
end)
