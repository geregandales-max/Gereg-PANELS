--// üåç Auto TP Panel (Disco + Crim Base + Pyramid + Bank + Clover Dropdown + Speed Slider)
--// by Vincenzo

--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Player = Players.LocalPlayer

--// Variables
local Running = true
local Minimized = false
local TweenSpeed = 100 -- üåÄ default speed (higher = slower)
local AutoTPs = {
    ["Disco"] = false,
    ["Crim Base"] = false,
    ["Pyramid"] = false,
    ["Bank"] = false
}

--// Teleport Locations
local Locations = {
    ["Disco"] = Vector3.new(1127.522, 175.501, 11.476),
    ["Crim Base"] = Vector3.new(2103.136, 25.947, 427.006),
    ["Pyramid"] = Vector3.new(1014.337, 51069.148, 561.972),
    ["Bank"] = Vector3.new(728.311, 109.206, 532.304),
    ["Clover Lever 1"] = Vector3.new(1644.273, 40.228, 447.347),
    ["Clover Lever 2"] = Vector3.new(1621.310, 41.151, 482.778),
    ["Clover Lever 3"] = Vector3.new(1744.354, 44.056, 446.076),
    ["Clover Lever 4"] = Vector3.new(1761.221, 43.104, 496.290),
    ["Clover Bank"] = Vector3.new(1684.756, 41.041, 520.764)
}

--// Helpers
local function enableNoclip(char, state)
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CanCollide = not state
		end
	end
end

--// UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "VincenzoAutoTP"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 380, 0, 470)
Frame.Position = UDim2.new(0.5, -190, 0.5, -235)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 12)

--// Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TitleBar.Parent = Frame
Instance.new("UICorner", TitleBar).CornerRadius = UDim.new(0, 12)

local TitleText = Instance.new("TextLabel")
TitleText.Size = UDim2.new(1, -120, 1, 0)
TitleText.Position = UDim2.new(0, 10, 0, 0)
TitleText.BackgroundTransparency = 1
TitleText.Text = "Vincenzo's Auto TP Panel üåç"
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.Font = Enum.Font.GothamBold
TitleText.TextScaled = true
TitleText.Parent = TitleBar

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 40, 1, 0)
MinimizeButton.Position = UDim2.new(1, -80, 0, 0)
MinimizeButton.BackgroundTransparency = 1
MinimizeButton.Text = "‚ûñ"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 150)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextScaled = true
MinimizeButton.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 40, 1, 0)
CloseButton.Position = UDim2.new(1, -40, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Text = "‚ùå"
CloseButton.TextColor3 = Color3.fromRGB(255, 100, 100)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextScaled = true
CloseButton.Parent = TitleBar

--// Status
local Status = Instance.new("TextLabel")
Status.Size = UDim2.new(1, 0, 0, 40)
Status.Position = UDim2.new(0, 0, 0.91, 0)
Status.BackgroundTransparency = 1
Status.Text = "Status: ‚ùå OFF"
Status.TextColor3 = Color3.fromRGB(255, 80, 80)
Status.Font = Enum.Font.GothamBold
Status.TextScaled = true
Status.Parent = Frame

--// TP Button Creator
local function createTPButton(name, order)
	local YPos = 0.12 + (order - 1) * 0.11
	local Button = Instance.new("TextButton")
	Button.Size = UDim2.new(0.8, 0, 0, 40)
	Button.Position = UDim2.new(0.1, 0, YPos, 0)
	Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Button.Text = name
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.Font = Enum.Font.GothamBold
	Button.TextScaled = true
	Button.Parent = Frame
	Instance.new("UICorner", Button).CornerRadius = UDim.new(0, 8)

	local activeTween = nil

	Button.MouseButton1Click:Connect(function()
		for k in pairs(AutoTPs) do
			AutoTPs[k] = false
		end
		AutoTPs[name] = not AutoTPs[name]

		if AutoTPs[name] then
			Button.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
			Status.Text = "Status: üåÄ Teleporting to " .. name .. "..."
			Status.TextColor3 = Color3.fromRGB(255, 255, 100)

			task.spawn(function()
				local target = Locations[name]
				local char = Player.Character
				if char and char:FindFirstChild("HumanoidRootPart") then
					local root = char.HumanoidRootPart
					enableNoclip(char, true)

					local tweenInfo = TweenInfo.new((root.Position - target).Magnitude / TweenSpeed, Enum.EasingStyle.Linear)
					local tween = TweenService:Create(root, tweenInfo, {CFrame = CFrame.new(target)})
					tween:Play()
					tween.Completed:Wait()

					enableNoclip(char, false)
					Status.Text = "Status: ‚úÖ TP‚Äôd to " .. name
					Status.TextColor3 = Color3.fromRGB(100, 255, 100)
					Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					AutoTPs[name] = false
				end
			end)
		else
			if activeTween then activeTween:Cancel() end
			enableNoclip(Player.Character, false)
			Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Status.Text = "Status: ‚ùå OFF"
			Status.TextColor3 = Color3.fromRGB(255, 80, 80)
		end
	end)
end

createTPButton("Disco", 1)
createTPButton("Crim Base", 2)
createTPButton("Pyramid", 3)
createTPButton("Bank", 4)

--// Clover Dropdown
local CloverFrame = Instance.new("Frame")
CloverFrame.Size = UDim2.new(0.8, 0, 0, 80)
CloverFrame.Position = UDim2.new(0.1, 0, 0.58, 0)
CloverFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CloverFrame.Parent = Frame
Instance.new("UICorner", CloverFrame).CornerRadius = UDim.new(0, 10)

local CloverTitle = Instance.new("TextLabel")
CloverTitle.Size = UDim2.new(1, 0, 0, 25)
CloverTitle.BackgroundTransparency = 1
CloverTitle.Text = "üçÄ Clover Teleports ‚ñº"
CloverTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CloverTitle.Font = Enum.Font.GothamBold
CloverTitle.TextScaled = true
CloverTitle.Parent = CloverFrame

local Scroll = Instance.new("ScrollingFrame")
Scroll.Size = UDim2.new(1, 0, 1, -25)
Scroll.Position = UDim2.new(0, 0, 0, 25)
Scroll.CanvasSize = UDim2.new(0, 0, 2, 0)
Scroll.BackgroundTransparency = 1
Scroll.ScrollBarThickness = 4
Scroll.Parent = CloverFrame

for i, name in ipairs({"Clover Lever 1", "Clover Lever 2", "Clover Lever 3", "Clover Lever 4", "Clover Bank"}) do
	local Button = Instance.new("TextButton")
	Button.Size = UDim2.new(1, -10, 0, 30)
	Button.Position = UDim2.new(0, 5, 0, (i - 1) * 33)
	Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	Button.Text = name
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.Font = Enum.Font.GothamBold
	Button.TextScaled = true
	Button.Parent = Scroll
	Instance.new("UICorner", Button).CornerRadius = UDim.new(0, 6)

	Button.MouseButton1Click:Connect(function()
		Status.Text = "Status: üåÄ Teleporting to " .. name .. "..."
		Status.TextColor3 = Color3.fromRGB(255, 255, 100)
		task.spawn(function()
			local target = Locations[name]
			local char = Player.Character
			if char and char:FindFirstChild("HumanoidRootPart") then
				local root = char.HumanoidRootPart
				enableNoclip(char, true)

				local tweenInfo = TweenInfo.new((root.Position - target).Magnitude / TweenSpeed, Enum.EasingStyle.Linear)
				local tween = TweenService:Create(root, tweenInfo, {CFrame = CFrame.new(target)})
				tween:Play()
				tween.Completed:Wait()

				enableNoclip(char, false)
				Status.Text = "Status: ‚úÖ TP‚Äôd (" .. name .. ")"
				Status.TextColor3 = Color3.fromRGB(100, 255, 100)
			end
		end)
	end)
end

--// Tween Speed Slider
local SliderFrame = Instance.new("Frame")
SliderFrame.Size = UDim2.new(0.8, 0, 0, 30)
SliderFrame.Position = UDim2.new(0.1, 0, 0.82, 0)
SliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
SliderFrame.Parent = Frame
Instance.new("UICorner", SliderFrame).CornerRadius = UDim.new(0, 8)

local SliderBar = Instance.new("Frame")
SliderBar.Size = UDim2.new(0.4, 0, 1, 0)
SliderBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
SliderBar.Parent = SliderFrame
Instance.new("UICorner", SliderBar).CornerRadius = UDim.new(0, 8)

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(1, 0, 1, 0)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Text = "Speed: " .. TweenSpeed
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedLabel.Font = Enum.Font.GothamBold
SpeedLabel.TextScaled = true
SpeedLabel.Parent = SliderFrame

local dragging = false
SliderFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
	end
end)
UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if dragging then
		local rel = math.clamp((input.Position.X - SliderFrame.AbsolutePosition.X) / SliderFrame.AbsoluteSize.X, 0, 1)
		SliderBar.Size = UDim2.new(rel, 0, 1, 0)
		TweenSpeed = math.floor(50 + rel * 300)
		SpeedLabel.Text = "Speed: " .. TweenSpeed
	end
end)

--// Frame Controls
CloseButton.MouseButton1Click:Connect(function()
	Running = false
	ScreenGui:Destroy()
end)

MinimizeButton.MouseButton1Click:Connect(function()
    Minimized = not Minimized

    if Minimized then
        -- hide all GUI children of Frame except TitleBar
        for _, v in ipairs(Frame:GetChildren()) do
            if v:IsA("GuiObject") and v ~= TitleBar then
                v.Visible = false
            end
        end

        -- ensure TitleBar and its main controls remain visible
        TitleBar.Visible = true
        if TitleText and TitleText:IsA("GuiObject") then TitleText.Visible = true end
        if MinimizeButton and MinimizeButton:IsA("GuiObject") then MinimizeButton.Visible = true end
        if CloseButton and CloseButton:IsA("GuiObject") then CloseButton.Visible = true end

        Frame:TweenSize(UDim2.new(0, 380, 0, 40), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        MinimizeButton.Text = "‚ûï"
    else
        -- restore visibility of all GUI children
        for _, v in ipairs(Frame:GetChildren()) do
            if v:IsA("GuiObject") then
                v.Visible = true
            end
        end

        Frame:TweenSize(UDim2.new(0, 380, 0, 470), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        MinimizeButton.Text = "‚ûñ"
    end
end)

--// Dragging
local draggingFrame, dragStart, startPos
local function updateDrag(input)
	local delta = input.Position - dragStart
	Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
TitleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingFrame = true
		dragStart = input.Position
		startPos = Frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then draggingFrame = false end
		end)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if draggingFrame and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		updateDrag(input)
	end
end)
